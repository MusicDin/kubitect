---
- name: Fetch kubeconfig from first master node
  hosts: kube_control_plane[0]
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Fetch Kubeconfig
      fetch:
        src: "/etc/kubernetes/admin.conf"
        dest: "{{ config_dir }}/admin.conf"
        flat: true

- name: Fetch kubeconfig from first master node
  hosts: server[0]
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Fetch Kubeconfig
      fetch:
        src: "/home/{{ ansible_user }}/.kube/config"
        dest: "{{ config_dir }}/admin.conf"
        flat: true

- name: Finalize cluster deployment
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  become: false

  roles:
    - role: config/cluster/import

  tasks:
    - name: Change fetched Kubeconfig permissions
      file:
        path: "{{ config_dir }}/admin.conf"
        mode: 0600

    - name: Copy Kubeconfig
      block:
        - name: Make sure ~/.kube directory exists
          file:
            path: "~/.kube"
            state: directory

        - name: Copy kubeconfig file to a ~/.kube dirctory
          copy:
            src: "{{ config_dir }}/admin.conf"
            dest: "~/.kube/config"
            mode: 0600
      when:
        - config.kubernetes.other.copyKubeconfig is defined
        - config.kubernetes.other.copyKubeconfig == true

- name: Install addons
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  become: false
  vars:
    addons_enabled: "{{ config.addons.rook.enabled | default(false) | bool }}"

  pre_tasks:
    - block:
        - name: Get system architecture fact
          setup:
            filter:
              - ansible_architecture

        - name: Resolve system architecture
          set_fact:
            arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
      when: addons_enabled

  roles:
    - { role: config/cluster/import, when: addons_enabled }
    - { role: config/infra/import, when: addons_enabled }
    - { role: addons/helm, when: addons_enabled }
    - { role: addons/rook, when: addons_enabled }
