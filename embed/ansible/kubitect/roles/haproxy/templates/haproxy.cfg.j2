global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend kubernetes
        bind *:6443
        option tcplog
        mode tcp
        default_backend kubernetes-control-plane

backend kubernetes-control-plane
        mode tcp
        balance roundrobin
        {% for master in control_plane_instances %}
        server {{ master.name }} {{ master.ip }}:6443 check fall 3 rise 2
        {% endfor %}

{% for fport in forward_ports %}
frontend forward-{{ fport.name }}
        bind *:{{ fport.port }}
        option tcplog
        mode tcp
        default_backend forward-{{ fport.name }}

{% set targetPort = fport.targetPort if fport.targetPort | default(none) else fport.port %}
{% set target = fport.target | default( default.forwardPortsTarget ) %}
backend forward-{{ fport.name }}
        mode tcp
        balance roundrobin
        {#
          Forward to master nodes, if target is set to masters or all,
          or if there is no worker nodes in the cluster
        #}
        {% if target in ['masters', 'all'] or worker_instances | default([]) | length == 0 %}
        {% for master in control_plane_instances %}
        server {{ master.name }} {{ master.ip }}:{{ targetPort }} check
        {% endfor %}
        {% endif %}
        {#
          Forward to worker nodes, if target is set to workers or all
        #}
        {% if target in ['workers', 'all'] %}
        {% for worker in worker_instances %}
        server {{ worker.name }} {{ worker.ip }}:{{ targetPort }} check
        {% endfor %}
        {% endif %}

{% endfor %}
